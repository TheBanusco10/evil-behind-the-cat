{
  "version": 3,
  "sources": ["../src/services/ASCIIFormatter.ts", "../src/services/GameScreens.ts", "../src/services/GameState.ts", "../src/levels/officeLevel.ts", "../src/levels/townLevel.ts", "../src/main.ts"],
  "sourcesContent": ["export const formatASCII = (ascii: string) => {\n    return `<pre>${ascii}</pre>`;\n}", "export const gameScreen = {\n    addElement(element: string) {\n        document.querySelector('#game-screen')!.innerHTML += element;\n    }\n}\n\nexport const gameInventory = {\n    addElement(element: string) {\n        document.querySelector('#game-inventory')!.innerHTML += element;\n    }\n}\n\nexport const gameInformation = {\n    addElement(element: string) {\n        document.querySelector('#game-information')!.innerHTML += element;\n    }\n}\n    ", "export const ALL_LEVELS = {\n    office: 'office',\n    town: 'town'\n}\n\nexport const currentLevel = {\n    level: ALL_LEVELS.office, // TODO Add localStorage system\n    changeLevel(level: string) {\n        this.level = level;\n\n        this.cleanScreen();\n\n        document.dispatchEvent(new CustomEvent(\"levelChanged\", {\n            detail: level\n        }));\n        // TODO Implement\n    },\n    cleanScreen() {\n        document.querySelector('#game-screen')!.innerHTML = '';\n    }\n}", "import { formatASCII } from \"../services/ASCIIFormatter\";\nimport { gameInformation, gameScreen } from \"../services/GameScreens\";\nimport { ALL_LEVELS, currentLevel } from \"../services/GameState\";\n\nexport const envelope = {\n  isOpened: false,\n  element: `<button class=\"ascii interact\" id=\"envelope\">\n  ${formatASCII(`    _______\n    /      /,\n   /      //\n  /______//\n (______(/\n`)}\n  </button>`,\n  openEnvelope: () => {\n    document.getElementById(\"envelope\")!.addEventListener(\"click\", () => {\n      if (envelope.isOpened) {\n        return;\n      }\n      gameInformation.addElement(\n        \"You opened the envelope. <button id='accept-case'>Accept case</button>\"\n      );\n\n      envelope.acceptCase();\n      envelope.isOpened = true;\n    });\n  },\n  acceptCase: () => {\n    document.getElementById(\"accept-case\")!.addEventListener(\"click\", () => {\n      gameInformation.addElement(\"You accepted the case.\");\n      currentLevel.changeLevel(ALL_LEVELS.town);\n    });\n  },\n  addInstance: () => {\n    gameScreen.addElement(envelope.element);\n    envelope.openEnvelope();\n  },\n};\n", "import { formatASCII } from \"../services/ASCIIFormatter\";\nimport { gameInformation, gameScreen } from \"../services/GameScreens\";\nimport { ALL_LEVELS, currentLevel } from \"../services/GameState\";\n\nexport const town = {\n  element: formatASCII(`~         ~~          __\n       _T      .,,.    ~--~ ^^\n ^^   // \\                    ~\n      ][O]    ^^      ,-~ ~\n   /''-I_I         _II____\n__/_  /   \\ ______/ ''   /'\\_,__\n  | II--'''' \\,--:--..,_/,.-{ },\n; '/__\\,.--';|   |[] .-.| O{ _ }\n:' |  | []  -|   ''--:.;[,.'\\,/\n'  |[]|,.--'' '',   ''-,.    |\n  ..    ..-''    ;       ''. '`),\n\n  addInstance: () => {\n    gameScreen.addElement(town.element);\n  },\n};\n", "import \"./assets/app.css\";\nimport * as officeLevel from \"./levels/officeLevel\";\nimport { town } from \"./levels/townLevel\";\nimport { gameInformation } from \"./services/GameScreens\";\nimport { currentLevel, ALL_LEVELS } from \"./services/GameState\";\n\nconst levelChangedEvent = new CustomEvent(\"levelChanged\", {\n    detail: ALL_LEVELS.office // TODO Create a function to dynamically create this event with param and then dispatch it\n});\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    document.dispatchEvent(levelChangedEvent);\n});\n\ndocument.addEventListener(\"levelChanged\" as any, (newLevel: CustomEvent<any>) => {\n    console.log(newLevel.detail);\n  switch (newLevel.detail) {\n    case ALL_LEVELS.office:\n      officeLevel.envelope.addInstance();\n      break;\n    case ALL_LEVELS.town:\n      town.addInstance();\n      break;\n    default:\n      break;\n  }\n});"],
  "mappings": ";;;AAAO,MAAM,cAAc,CAAC,UAAkB;AAC1C,WAAO,QAAQ,KAAK;AAAA,EACxB;;;ACFO,MAAM,aAAa;AAAA,IACtB,WAAW,SAAiB;AACxB,eAAS,cAAc,cAAc,EAAG,aAAa;AAAA,IACzD;AAAA,EACJ;AAQO,MAAM,kBAAkB;AAAA,IAC3B,WAAW,SAAiB;AACxB,eAAS,cAAc,mBAAmB,EAAG,aAAa;AAAA,IAC9D;AAAA,EACJ;;;AChBO,MAAM,aAAa;AAAA,IACtB,QAAQ;AAAA,IACR,MAAM;AAAA,EACV;AAEO,MAAM,eAAe;AAAA,IACxB,OAAO,WAAW;AAAA;AAAA,IAClB,YAAY,OAAe;AACvB,WAAK,QAAQ;AAEb,WAAK,YAAY;AAEjB,eAAS,cAAc,IAAI,YAAY,gBAAgB;AAAA,QACnD,QAAQ;AAAA,MACZ,CAAC,CAAC;AAAA,IAEN;AAAA,IACA,cAAc;AACV,eAAS,cAAc,cAAc,EAAG,YAAY;AAAA,IACxD;AAAA,EACJ;;;AChBO,MAAM,WAAW;AAAA,IACtB,UAAU;AAAA,IACV,SAAS;AAAA,IACP,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,CAKf,CAAC;AAAA;AAAA,IAEA,cAAc,MAAM;AAClB,eAAS,eAAe,UAAU,EAAG,iBAAiB,SAAS,MAAM;AACnE,YAAI,SAAS,UAAU;AACrB;AAAA,QACF;AACA,wBAAgB;AAAA,UACd;AAAA,QACF;AAEA,iBAAS,WAAW;AACpB,iBAAS,WAAW;AAAA,MACtB,CAAC;AAAA,IACH;AAAA,IACA,YAAY,MAAM;AAChB,eAAS,eAAe,aAAa,EAAG,iBAAiB,SAAS,MAAM;AACtE,wBAAgB,WAAW,wBAAwB;AACnD,qBAAa,YAAY,WAAW,IAAI;AAAA,MAC1C,CAAC;AAAA,IACH;AAAA,IACA,aAAa,MAAM;AACjB,iBAAW,WAAW,SAAS,OAAO;AACtC,eAAS,aAAa;AAAA,IACxB;AAAA,EACF;;;ACjCO,MAAM,OAAO;AAAA,IAClB,SAAS,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAUQ;AAAA,IAE7B,aAAa,MAAM;AACjB,iBAAW,WAAW,KAAK,OAAO;AAAA,IACpC;AAAA,EACF;;;ACdA,MAAM,oBAAoB,IAAI,YAAY,gBAAgB;AAAA,IACtD,QAAQ,WAAW;AAAA;AAAA,EACvB,CAAC;AAED,WAAS,iBAAiB,oBAAoB,MAAM;AAChD,aAAS,cAAc,iBAAiB;AAAA,EAC5C,CAAC;AAED,WAAS,iBAAiB,gBAAuB,CAAC,aAA+B;AAC7E,YAAQ,IAAI,SAAS,MAAM;AAC7B,YAAQ,SAAS,QAAQ;AAAA,MACvB,KAAK,WAAW;AACd,QAAY,SAAS,YAAY;AACjC;AAAA,MACF,KAAK,WAAW;AACd,aAAK,YAAY;AACjB;AAAA,MACF;AACE;AAAA,IACJ;AAAA,EACF,CAAC;",
  "names": []
}
