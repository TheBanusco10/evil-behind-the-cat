{
  "version": 3,
  "sources": ["../src/ascii/books.ts", "../src/ascii/tables.ts", "../src/services/ASCIIFormatter.ts", "../src/ascii/signs.ts", "../src/services/GameScreens.ts", "../src/services/GameState.ts", "../src/levels/officeLevel.ts", "../src/levels/townLevel.ts", "../src/main.ts"],
  "sourcesContent": ["export const BOOKS_ASCII = {\n  envelope: `\n  ____  \n()____)\n\\\\ ~~~\\\\\n  \\\\____\\\\\n   ()___)`,\n  openedEnvelope: `   ______________________________\n / \\\\                             \\\\.\n|   |                            |.\n \\\\_ |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |                            |.\n    |   _________________________|___\n    |  /                            /.\n    \\\\_/dc__________________________/.`,\n};\n", "export const TABLES_ASCII = {\n    desk: `     ------------------    \n    \u2502                  \u2502   \n   \u2502                    \u2502   \n  \u2502                      \u2502  \n \u2502                        \u2502 \n -------------------------- \n |    \u2502 o \u2502       \u2502 o \u2502   | \n -------------------------- \n ||  ||              ||  || \n ||  ||              ||  || \n ||  ||              ||  || \n || (__)            (__) || \n ||                      || \n(__)                    (__)`,\n};\n", "export const formatASCII = (ascii: string) => {\n    return `<pre>${ascii}</pre>`;\n}", "import { formatASCII } from \"../services/ASCIIFormatter\";\n\nexport const SIGNS_ASCII = {\n  sign(text: string) {\n    return `\n            <div style=\"position: relative;\">\n                <p style=\"position: absolute; top: 5px; left: 50%; transform: translateX(-50%);\">${text.toUpperCase()}</p>\n                ${formatASCII(`\n       __________________\n______|                 |_____\n\\\\     |_________________|    /\n/_______)             (______\\\\ \n                `)}\n            </div>\n        `;\n  },\n};\n", "import { SIGNS_ASCII } from \"../ascii/signs\";\n\nexport const gameScreen = {\n  addElement(element: string) {\n    document.querySelector(\"#game-screen\")!.innerHTML += element;\n  },\n  cleanGameScreen() {\n    document.querySelector(\"#game-screen\")!.innerHTML = \"\";\n  },\n};\n\nexport const gameInventory = {\n  addElement(element: string) {\n    document.querySelector(\"#game-inventory\")!.innerHTML += element;\n  },\n};\n\nexport const gameInformation = {\n  addElement(element: string) {\n    document.querySelector(\"#game-information\")!.innerHTML += element;\n  },\n  cleanInformation() {\n    document.querySelector(\"#game-information\")!.innerHTML = \"\";\n  },\n};\n\nexport const gameLocation = {\n  updateLocationText(text: string) {\n    this.cleanLocation();\n\n    document.querySelector(\"#game-location\")!.innerHTML += SIGNS_ASCII.sign(text);\n  },\n  cleanLocation() {\n    document.querySelector(\"#game-location\")!.innerHTML = \"\";\n  },\n};\n", "import { gameLocation, gameScreen } from \"./GameScreens\";\n\nexport const ALL_LEVELS = {\n  office: \"office\",\n  town: \"town\",\n};\n\nexport const levelSystem = {\n  level: ALL_LEVELS.office, // TODO Add localStorage system\n  changeLevel(level: string) {\n    this.level = level;\n\n    gameScreen.cleanGameScreen();\n    gameLocation.updateLocationText(level);\n\n    document.dispatchEvent(\n      new CustomEvent(\"levelChanged\", {\n        detail: level,\n      })\n    );\n  },\n};\n", "import { BOOKS_ASCII } from \"../ascii/books\";\nimport { TABLES_ASCII } from \"../ascii/tables\";\nimport { formatASCII } from \"../services/ASCIIFormatter\";\nimport { gameInformation, gameScreen } from \"../services/GameScreens\";\nimport { ALL_LEVELS, levelSystem } from \"../services/GameState\";\n\nexport const envelope = {\n  isOpened: false,\n  element: `<button class=\"ascii interact\" id=\"envelope\" style=\"position: absolute; top: 85px;\">\n  ${formatASCII(BOOKS_ASCII.envelope)}\n  </button>`,\n  openEnvelope: () => {\n    document.getElementById(\"envelope\")!.addEventListener(\"click\", () => {\n      if (envelope.isOpened) {\n        return;\n      }\n\n      gameScreen.cleanGameScreen();\n      gameInformation.cleanInformation();\n\n      gameScreen.addElement(`\n        <div style=\"position: relative;\">\n          ${formatASCII(BOOKS_ASCII.openedEnvelope)}\n          <p style=\"position: absolute; top: 6px; width: 180px; left: 46px; font-size: 13px;\">\n            Dear Mrs. Johnson, <br />\n            <br />\n            I am writing to you because I have a case for you. <br />\n            <br />\n            Sincerely, <br />\n            John Doe\n          </p>\n        </div>  \n      `);\n\n      gameInformation.addElement(`\n        <button id=\"close-envelope\">Close envelope</button>\n        <button id=\"accept-case\">Accept case</button>  \n      `);\n\n      envelope.acceptCase();\n      envelope.closeEnvelope();\n      envelope.isOpened = true;\n    });\n  },\n  acceptCase: () => {\n    document.getElementById(\"accept-case\")!.addEventListener(\"click\", () => {\n      gameScreen.cleanGameScreen();\n      gameInformation.cleanInformation();\n      levelSystem.changeLevel(ALL_LEVELS.town);\n    });\n  },\n  closeEnvelope: () => {\n    document.getElementById(\"close-envelope\")!.addEventListener(\"click\", () => {\n      envelope.isOpened = false;\n      gameScreen.cleanGameScreen();\n      gameInformation.cleanInformation();\n      levelSystem.changeLevel(ALL_LEVELS.office);\n    });\n  },\n  addInstance: () => {\n    gameScreen.addElement(`\n      <div style=\"position: relative; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center;\">\n        ${envelope.element}\n        ${formatASCII(TABLES_ASCII.desk)}\n      </div>  \n    `);\n    envelope.openEnvelope();\n    envelope.closeEnvelope();\n  },\n};\n", "import { formatASCII } from \"../services/ASCIIFormatter\";\nimport { gameInformation, gameScreen } from \"../services/GameScreens\";\nimport { ALL_LEVELS, levelSystem } from \"../services/GameState\";\n\nexport const town = {\n  element: formatASCII(`~         ~~          __\n       _T      .,,.    ~--~ ^^\n ^^   // \\                    ~\n      ][O]    ^^      ,-~ ~\n   /''-I_I         _II____\n__/_  /   \\ ______/ ''   /'\\_,__\n  | II--'''' \\,--:--..,_/,.-{ },\n; '/__\\,.--';|   |[] .-.| O{ _ }\n:' |  | []  -|   ''--:.;[,.'\\,/\n'  |[]|,.--'' '',   ''-,.    |\n  ..    ..-''    ;       ''. '`),\n\n  addInstance: () => {\n    gameScreen.addElement(town.element);\n  },\n};\n", "import \"./assets/app.css\";\nimport * as officeLevel from \"./levels/officeLevel\";\nimport { town } from \"./levels/townLevel\";\nimport { levelSystem, ALL_LEVELS } from \"./services/GameState\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  levelSystem.changeLevel(ALL_LEVELS.office);\n});\n\ndocument.addEventListener(\n  \"levelChanged\" as any,\n  (newLevel: CustomEvent<any>) => {\n    switch (newLevel.detail) {\n      case ALL_LEVELS.office:\n        officeLevel.envelope.addInstance();\n        break;\n      case ALL_LEVELS.town:\n        town.addInstance();\n        break;\n      default:\n        break;\n    }\n  }\n);\n"],
  "mappings": "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",
  "names": []
}
